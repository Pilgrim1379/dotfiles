#!/bin/zsh

# Zsh runs .zshrc for each interactive shell, after .zprofile

# REFERENCES
# https://unix.stackexchange.com/questions/85249/why-not-use-which-what-to-use-then - # Why not use "which"?

# +-----------+
# | PROFILING |
# +-----------+
# zmodload zsh/zprof # comment out after profiling

# Enable Powerlevel10k instant prompt. Should stay close to the top of $HOME/.config/zsh/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Add plugins path
fpath=(
    $ZDOTDIR/plugins(N) 
    $fpath
    )

# +------------+
# | NAVIGATION |
# +------------+

setopt AUTO_CD              # Go to folder path without using cd.

setopt AUTO_PUSHD           # Push the old directory onto the stack on cd.
setopt PUSHD_IGNORE_DUPS    # Do not store duplicates in the stack.
setopt PUSHD_SILENT         # Do not print the directory stack after pushd or popd.

setopt CORRECT              # Spelling correction
setopt CDABLE_VARS          # Change directory to a path stored in a variable.
setopt EXTENDED_GLOB        # Use extended globbing syntax.
setopt GLOB_DOTS            # Use extended globbing syntax.

setopt NO_CLOBBER           # Don't let > overwrite files. To overwrite, use >| instead.
setopt HASH_EXECUTABLES_ONLY # Don't treat non-executable files in your $path as commands.
setopt HIST_FCNTL_LOCK      # With this option locking is done by means of the systemâ€™s fcntl cal
setopt HIST_SAVE_NO_DUPS    # When writing out the history file, older commands that duplicate newer ones are omitted. 

# https://zsh.sourceforge.io/Doc/Release/Expansion.html#Recursive-Globbing
setopt GLOB_STAR_SHORT      # Enable ** and *** as shortcuts for **/* and ***/*, respectively.
setopt NUMERIC_GLOB_SORT    # Sort numbers numerically, not lexicographically.
setopt NO_AUTO_PARAM_SLASH  # If a parameter is completed whose content is the name of a directory, don't add a trailing slash. 

# +---------+
# | HISTORY |
# +---------+
source $ZDOTDIR/history.zsh

# +-------------+
# | ENVIRONMENT |
# +-------------+
source $ZDOTDIR/environment.zsh

# +---------+
# | SCRIPTS |
# +---------+
source $ZDOTDIR/functions.zsh

# +--------------+
# | EMACS KEYMAP |
# +--------------+
# bindkey -e

# +-----------+
# | VI KEYMAP |
# +-----------+
# source $ZDOTDIR/keybindings.zsh
bindkey -v
export KEYTIMEOUT=1

# Change cursor
source "$ZDOTDIR/plugins/cursor_mode"

# Add Vi text-objects for brackets and quotes
autoload -Uz select-bracketed select-quoted
zle -N select-quoted
zle -N select-bracketed
for km in viopp visual; do
  bindkey -M $km -- '-' vi-up-line-or-history
  for c in {a,i}${(s..)^:-\'\"\`\|,./:;=+@}; do
    bindkey -M $km $c select-quoted
  done
  for c in {a,i}${(s..)^:-'()[]{}<>bB'}; do
    bindkey -M $km $c select-bracketed
  done
done

# Emulation of vim-surround
autoload -Uz surround
zle -N delete-surround surround
zle -N add-surround surround
zle -N change-surround surround
bindkey -M vicmd cs change-surround
bindkey -M vicmd ds delete-surround
bindkey -M vicmd ys add-surround
bindkey -M visual S add-surround


# +------------+
# | COMPLETION |
# +------------+
source $ZDOTDIR/completion.zsh

# Pipx
if (( $+commands[pipx] )); then
    eval "$(register-python-argcomplete pipx)"
fi

# Pipenv
if (( $+commands[pipenv] )); then
    eval "$(_PIPENV_COMPLETE=zsh_source pipenv)" 
fi

# Better cding like z.lua but faster
if (( $+commands[zoxide] )); then
    eval "$(zoxide init zsh)"
fi


# +------------------+
# | AUTO SUGGESTIONS |
# +------------------+
# ZSH_AUTOSUGGEST_ACCEPT_WIDGETS=(end-of-line vi-end-of-line)
# ZSH_AUTOSUGGEST_PARTIAL_ACCEPT_WIDGETS+=( forward-char forward-word )
# ZSH_AUTOSUGGEST_STRATEGY=( history completion )
# ZSH_AUTOSUGGEST_HISTORY_IGNORE=$'(*\n*|?(#c80,)|*\\#:hist:push-line:)'

source $ZDOTDIR/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh

bindkey '^X' autosuggest-execute
bindkey '^E' autosuggest-accept

# +---------+
# | BINDING |
# +---------+
# edit current command line with vim (vim-mode, then CTRL-v)
autoload -Uz edit-command-line
zle -N edit-command-line
bindkey -M vicmd '^v' edit-command-line

source $ZDOTDIR/keybindings.zsh

# +---------+
# | ALIASES |
# +---------+
# source the alias.zsh files every command to pull in new additions
precmd(){
    source $ZDOTDIR/aliases
}

# +--------+
# | PROMPT |
# +--------+
## Powerlevel 10K
# To customize prompt, run `p10k configure` or edit $HOME/.config/zsh/.p10k.zsh.
source  $ZDOTDIR/plugins/powerlevel10k/powerlevel10k.zsh-theme
[[ ! -f ~/.config/zsh/.p10k.zsh ]] || source ~/.config/zsh/.p10k.zsh


# +---------------------+
# | SYNTAX HIGHLIGHTING |
# +---------------------+
ZSH_HIGHLIGHT_HIGHLIGHTERS=( main brackets ) # # Command-line syntax highlighting config
source $ZDOTDIR/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# zprof # comment out after profiling
##### Nothing below this line #######
